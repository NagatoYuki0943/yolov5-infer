# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import trans_image_pb2 as trans__image__pb2


class TransImageStub(object):
    """服务定义，这个就是我们在程序中要定义的类了，类名就是data
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.trans = channel.unary_unary(
                '/trans_image.TransImage/trans',
                request_serializer=trans__image__pb2.DataRquest.SerializeToString,
                response_deserializer=trans__image__pb2.DataResponse.FromString,
                )


class TransImageServicer(object):
    """服务定义，这个就是我们在程序中要定义的类了，类名就是data
    """

    def trans(self, request, context):
        """函数定义 data_request参数 data_reply返回数据,这个就是在服务器要实现的方法了，是个函数
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TransImageServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'trans': grpc.unary_unary_rpc_method_handler(
                    servicer.trans,
                    request_deserializer=trans__image__pb2.DataRquest.FromString,
                    response_serializer=trans__image__pb2.DataResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'trans_image.TransImage', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TransImage(object):
    """服务定义，这个就是我们在程序中要定义的类了，类名就是data
    """

    @staticmethod
    def trans(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/trans_image.TransImage/trans',
            trans__image__pb2.DataRquest.SerializeToString,
            trans__image__pb2.DataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
